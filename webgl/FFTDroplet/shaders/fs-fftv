#ifdef GL_ES
precision highp float;
#endif

uniform sampler2D samp;
uniform sampler2D W_M;
uniform sampler2D W_N;

varying vec2 tc;
uniform float M, N;
float h1 = 1. / M;
float h2 = 1. / N;
uniform float iter, sign, dim;
float psize = exp2(iter); //size of a partition

vec2 WM(float k) {
    return texture2D(W_M, vec2(sign * k / psize + .5 * h1, .5)).rg;
}

vec2 complexProd(vec2 x, vec2 y) {
    return vec2(x.r * y.r - x.g * y.g, x.r * y.g + x.g * y.r);
}

void main(void) {
    vec2 u = floor(tc.rg * psize);
    vec2 idx = tc.rg + u / psize;
    vec2 t0 = texture2D(samp, idx).rg;
    vec2 t1 = texture2D(samp, vec2(idx.r + 1. / psize, idx.g)).rg;
    vec2 t2 = texture2D(samp, vec2(idx.r, idx.g + 1. / psize)).rg;
    vec2 t3 = texture2D(samp, vec2(idx.r + 1. / psize, idx.g + 1. / psize)).rg;
    gl_FragColor.rg = t0 + complexProd(WM(u.r), t1) + complexProd(WM(u.g), t2) + complexProd(WM(u.r + u.g), t3);
    // if(sign == 1. && iter == 1.){
    // 	gl_FragColor.rg = gl_FragColor.rg/M/M;
    // }

    gl_FragColor.ba = texture2D(samp, tc).ba;
}