#ifdef GL_ES
precision highp float;
#endif

uniform sampler2D samp;
varying vec2 tc;
uniform float M, N;
float h1 = 1. / M;
float h2 = 1. / N;

uniform float visc, dt;

void main(void) {
    vec2 a = texture2D(samp, tc).rg;
    vec2 b = texture2D(samp, vec2(1. + h1 - tc.r, 1. + h2 - tc.g)).rg;
    vec2 sym = (a + b) / 2.;
    vec2 asym = (a - b) / 2.;

    float k = tc.r - 0.5 * h1;
    k = k <= .5 ? k : k - 1.;
    float l = tc.g - 0.5 * h2;
    l = l <= .5 ? l : l - 1.;

    float r = k * k + l * l;
    vec2 v1 = vec2(k, l);
    sym -= dot(v1, sym) * v1 / r;
    vec2 v2 = vec2(-l, k);
    asym -= dot(v2, asym) * v2 / r;
    gl_FragColor = texture2D(samp, tc);
    gl_FragColor.rg = (sym + asym) / M / N; //with fft normalization
    gl_FragColor.rg *= exp(-r * dt * visc); //apply viscosity
}